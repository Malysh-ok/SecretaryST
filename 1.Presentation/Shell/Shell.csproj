<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <Nullable>enable</Nullable>
        <UseWPF>true</UseWPF>
        <RootNamespace>Presentation.Shell</RootNamespace>
        <Company>@ Malysh S. V.</Company>
        <AssemblyName>SecretaryST</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <FileVersion>2.0.0.0</FileVersion>
        <ApplicationIcon>..\Resources\Images\Человек на навеске.ico</ApplicationIcon>
        <TargetFramework>net8.0-windows</TargetFramework>
    </PropertyGroup>

    <ItemGroup>
      <ProjectReference Include="..\..\2.AppDomain\Setting\Setting.csproj" />
      <ProjectReference Include="..\..\2.AppDomain\UseCases\UseCases.csproj" />
      <ProjectReference Include="..\..\4.DataAccess\DbContexts\DbContexts.csproj" />
      <ProjectReference Include="..\..\4.DataAccess\Repositories\Repositories.csproj" />
      <ProjectReference Include="..\..\5.Common\BaseExtensions\BaseExtensions.csproj" />
      <ProjectReference Include="..\..\5.Common\CommonPhrases\CommonPhrases.csproj" />
      <ProjectReference Include="..\..\5.Common\WpfModule\CommonResources\CommonResources.csproj" />
      <ProjectReference Include="..\..\5.Common\WpfModule\Components\Components.csproj" />
      <ProjectReference Include="..\..\5.Common\WpfModule\Extensions\Extensions.csproj" />
      <ProjectReference Include="..\..\5.Common\WpfModule\Ui\Ui.csproj" />
      <ProjectReference Include="..\Resources\Resources.csproj" />
      <ProjectReference Include="..\ViewModels\ViewModels.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Page Update="Views\MainView.xaml">
        <Generator>MSBuild:Compile</Generator>
        <XamlRuntime>Wpf</XamlRuntime>
        <SubType>Designer</SubType>
      </Page>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="Fluent.Ribbon" Version="10.0.4" />
      <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.4">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
      <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
      <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="8.0.0" />
      <PackageReference Include="Microsoft.Extensions.Configuration.Xml" Version="8.0.0" />
      <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
      <PackageReference Include="Serilog" Version="3.1.1" />
      <PackageReference Include="Serilog.Exceptions" Version="8.4.0" />
      <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
      <PackageReference Include="Serilog.Sinks.Console" Version="5.0.1" />
    </ItemGroup>

    <!--Копируем необходимые файлы после компиляции-->
    <ItemGroup>
        <ContentWithTargetPath Include="Setting.xml">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Config\%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>
<!--
        <ContentWithTargetPath Include="Setting.xml">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <TargetPath>Config\%(Filename)%(Extension)</TargetPath>
        </ContentWithTargetPath>
-->
    </ItemGroup>
    
    <ItemGroup>
      <None Remove="appsettings.json" />
    </ItemGroup>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <PropertyGroup>
            <!-- %3B is semicolon (;)  -->

            <!--Файл проекта с контекстом БД-->
            <DbContextProjName>DbContexts.csproj</DbContextProjName>
            <DbContextDir>..\..\4.DataAccess\DbContexts\</DbContextDir>
            
            <!--Получаем абсолютный путь к проекту с контекстом БД в виде скрипта-->
            <_GetDbContextProjPath>
                $dbContextProjPath = [System.IO.Path]::Combine("$(ProjectDir)", "$(DbContextDir)$(DbContextProjName)")
                $dbContextProjPath = [System.IO.Path]::GetFullPath($dbContextProjPath)
            </_GetDbContextProjPath>

            <!--Создаем первую миграцию-->
            <_AddFirstMigration>
                Write-Host "Создаем первую миграцию" -ForegroundColor Green
                Write-Host ""
                $(_GetDbContextProjPath)
                dotnet ef migrations add Initial -o Migrations -s "$(ProjectPath)" -p $dbContextProjPath -v
                pause
            </_AddFirstMigration>

            <!--Создаем миграцию-->
            <_AddMigration>
                Write-Host "Создаем миграцию" -ForegroundColor Green
                Write-Host ""
                $(_GetDbContextProjPath)
                $MigrationName = Read-Host "Введите название миграции"
                dotnet ef migrations add $MigrationName -o Migrations -s "$(ProjectPath)" -p $dbContextProjPath -v
                pause
            </_AddMigration>

            <!--Обновляем базу данных до последней миграции-->
            <_UpdateDatabase>
                Write-Host "Обновляем базу данных до последней миграции" -ForegroundColor Green
                Write-Host ""
                $(_GetDbContextProjPath)
                <!--Read-Host "Выполните сборку (а лучше - пересборку) проекта '$(ProjectName)' и нажмите 'Enter'"-->
                dotnet ef database update -s "$(ProjectPath)" -p $dbContextProjPath -v
                pause
            </_UpdateDatabase>

            <!--Удаляем последнюю миграцию-->
            <_RemoveMigration>
                Write-Host "Удаляем последнюю миграцию" -ForegroundColor Green
                Write-Host ""
                $(_GetDbContextProjPath)
                dotnet ef migrations remove -s "$(ProjectPath)" -p $dbContextProjPath -v
                pause
            </_RemoveMigration>
        </PropertyGroup>

        <WriteLinesToFile File="$(DbContextDir)Scripts\1. Создать первую миграцию.ps1" Lines="$(_AddFirstMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(DbContextDir)Scripts\2. Создать миграцию.ps1" Lines="$(_AddMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(DbContextDir)Scripts\3. Обновить базу данных до последней миграции.ps1" Lines="$(_UpdateDatabase)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(DbContextDir)Scripts\4. Удалить последнюю миграцию.ps1" Lines="$(_RemoveMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
    </Target>

</Project>
